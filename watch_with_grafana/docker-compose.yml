services:

################--GRAFANA--################
  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    user: root
    environment:
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=${POSTGRES_DB}
      - GF_DATABASE_USER=${POSTGRES_USER}
      - GF_DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      # - GF_SMTP_ENABLED=${}
      # - GF_SMTP_HOST=smtp_host:smtp_port
      # - GF_SMTP_SSL_MODE=${}
      # - GF_SMTP_USER=${}
      # - GF_SMTP_PASSWORD=${}
      # - GF_SMTP_FROM_ADDRESS=${}
      # - GF_SMTP_FROM_NAME=${}
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
    networks:
      - network
###########################################

###############--POSTGRESQL--##############
  # Postgres db
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - network
###########################################

############--PROMETHEUS Bulk--############
  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - network

  # Node-exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - network

  # Postgres-exporter
  postgres-exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: postgres-exporter
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    networks:
      - network

  # JMX-exporter
  jmx-exporter:
    image: dcagatay/hadoop-jmx-exporter:latest
    container_name: jmx-exporter
    restart: always
    networks:
      - network

  # CadVisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest    
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    networks:
      - network

# Blackbox-exporter
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    restart: always
    command: --config.file=/etc/blackbox_exporter/config.yml
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml
    networks:
      - network
###########################################

#################--NGINX--#################
  # Nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/error.log:/var/log/nginx/error.log
      - ./nginx/access.log:/var/log/nginx/access.log
    ports:
      - 80:80
      - 443:443
    networks:
      - network
###########################################


networks:
  network:
    name: watch
    external: false